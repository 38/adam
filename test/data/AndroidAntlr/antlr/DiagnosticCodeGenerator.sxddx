(class (attrs public ) antlr/DiagnosticCodeGenerator
 (super antlr/CodeGenerator)
 (source "DiagnosticCodeGenerator.java")

 (field (attrs protected ) doingLexRules boolean )
 (field (attrs protected ) syntacticPredLevel int )

(method (attrs public ) <init>()void
  (limit registers 2)
  ; this: v1 ([object antlr/DiagnosticCodeGenerator])
  (const/4 v0 0)
  (line 32)
  (invoke-direct {v1} antlr/CodeGenerator/<init> )
  (line 22)
  (iput v0 v1 antlr/DiagnosticCodeGenerator.syntacticPredLevel int)
  (line 25)
  (iput-boolean v0 v1 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (line 33)
  (new-instance v0 antlr/JavaCharFormatter)
  (invoke-direct {v0} antlr/JavaCharFormatter/<init> )
  (iput-object v0 v1 antlr/DiagnosticCodeGenerator.charFormatter [object antlr/CharFormatter])
  (line 34)
  (return-void )
 )

(method (attrs public ) gen()void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 8)
  ; this: v7 ([object antlr/DiagnosticCodeGenerator])
  (catch java/io/IOException from l33e56 to l33e74 using l33e46)
  (catch java/io/IOException from l33dc0 to l33e44 using l33e46)
  (label l33dc0)
  (line 42)
  (iget-object v5 v7 antlr/DiagnosticCodeGenerator.behavior [object antlr/DefineGrammarSymbols])
  (iget-object v5 v5 antlr/DefineGrammarSymbols.grammars [object java/util/Hashtable])
  (invoke-virtual {v5} java/util/Hashtable/elements )
  (move-result-object v2)
  (label l33dd0)
  (line 43)
  (invoke-interface {v2} java/util/Enumeration/hasMoreElements )
  (move-result v5)
  (if-nez v5 l33dfa)
  (line 61)
  (iget-object v5 v7 antlr/DiagnosticCodeGenerator.behavior [object antlr/DefineGrammarSymbols])
  (iget-object v5 v5 antlr/DefineGrammarSymbols.tokenManagers [object java/util/Hashtable])
  (invoke-virtual {v5} java/util/Hashtable/elements )
  (move-result-object v4)
  (label l33dec)
  (line 62)
  (invoke-interface {v4} java/util/Enumeration/hasMoreElements )
  (move-result v5)
  (if-nez v5 l33e56)
  (label l33df8)
  (line 73)
  (return-void )
  (label l33dfa)
  (line 44)
  (invoke-interface {v2} java/util/Enumeration/nextElement )
  (move-result-object v1)
  (check-cast v1 [object antlr/Grammar])
  (label l33e06)
  (line 47)
  (iget-object v5 v7 antlr/DiagnosticCodeGenerator.analyzer [object antlr/LLkGrammarAnalyzer])
  (invoke-virtual {v1 v5} antlr/Grammar/setGrammarAnalyzer [object antlr/LLkGrammarAnalyzer] )
  (line 48)
  (invoke-virtual {v1 v7} antlr/Grammar/setCodeGenerator [object antlr/CodeGenerator] )
  (line 49)
  (iget-object v5 v7 antlr/DiagnosticCodeGenerator.analyzer [object antlr/LLkGrammarAnalyzer])
  (invoke-interface {v5 v1} antlr/LLkGrammarAnalyzer/setGrammar [object antlr/Grammar] )
  (line 52)
  (invoke-virtual {v1} antlr/Grammar/generate )
  (line 54)
  (iget-object v5 v7 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (invoke-virtual {v5} antlr/Tool/hasError )
  (move-result v5)
  (if-eqz v5 l33dd0)
  (line 55)
  (iget-object v5 v7 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (const-string v6 "Exiting due to errors.")
  (invoke-virtual {v5 v6} antlr/Tool/panic [object java/lang/String] )
  (label l33e44)
  (goto l33dd0)
  (label l33e46)
  (line 70)
  (move-exception v0)
  (label l33e48)
  (line 71)
  (iget-object v5 v7 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (const/4 v6 0)
  (invoke-virtual {v5 v0 v6} antlr/Tool/reportException [object java/lang/Exception] [object java/lang/String] )
  (goto l33df8)
  (label l33e56)
  (line 63)
  (invoke-interface {v4} java/util/Enumeration/nextElement )
  (move-result-object v3)
  (check-cast v3 [object antlr/TokenManager])
  (line 64)
  (invoke-interface {v3} antlr/TokenManager/isReadOnly )
  (move-result v5)
  (if-nez v5 l33dec)
  (line 66)
  (invoke-virtual {v7 v3} antlr/DiagnosticCodeGenerator/genTokenTypes [object antlr/TokenManager] )
  (label l33e74)
  (goto l33dec)
)

(method (attrs public ) gen([object antlr/ActionElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 3)
  ; this: v1 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v2 ([object antlr/ActionElement])
  (line 79)
  (iget-boolean v0 v2 antlr/ActionElement.isSemPred boolean)
  (if-nez v0 l33ebc)
  (line 83)
  (const-string v0 "ACTION: ")
  (invoke-virtual {v1 v0} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 84)
  (iget-object v0 v2 antlr/ActionElement.actionText [object java/lang/String])
  (invoke-virtual {v1 v0} antlr/DiagnosticCodeGenerator/_printAction [object java/lang/String] )
  (label l33ebc)
  (line 86)
  (return-void )
)

(method (attrs public ) gen([object antlr/AlternativeBlock] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/AlternativeBlock])
  (line 92)
  (const-string v1 "Start of alternative block.")
  (invoke-virtual {v2 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 93)
  (iget v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v1 v1 1)
  (iput v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (line 94)
  (invoke-virtual {v2 v3} antlr/DiagnosticCodeGenerator/genBlockPreamble [object antlr/AlternativeBlock] )
  (line 96)
  (iget-object v1 v2 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v1 v1 antlr/Grammar.theLLkAnalyzer [object antlr/LLkGrammarAnalyzer])
  (invoke-interface {v1 v3} antlr/LLkGrammarAnalyzer/deterministic [object antlr/AlternativeBlock] )
  (move-result v0)
  (line 97)
  (if-nez v0 l33f0a)
  (line 98)
  (const-string v1 "Warning: This alternative block is non-deterministic")
  (invoke-virtual {v2 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l33f0a)
  (line 100)
  (invoke-virtual {v2 v3} antlr/DiagnosticCodeGenerator/genCommonBlock [object antlr/AlternativeBlock] )
  (line 101)
  (iget v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v1 v1 255)
  (iput v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (line 102)
  (return-void )
)

(method (attrs public ) gen([object antlr/BlockEndElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 2)
  ; this: v0 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v1 ([object antlr/BlockEndElement])
  (line 111)
  (return-void )
)

(method (attrs public ) gen([object antlr/CharLiteralElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/CharLiteralElement])
  (line 117)
  (const-string v0 "Match character ")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 118)
  (iget-boolean v0 v3 antlr/CharLiteralElement.not boolean)
  (if-eqz v0 l33f60)
  (line 119)
  (const-string v0 "NOT ")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l33f60)
  (line 121)
  (iget-object v0 v3 antlr/CharLiteralElement.atomText [object java/lang/String])
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (line 122)
  (iget-object v0 v3 antlr/CharLiteralElement.label [object java/lang/String])
  (if-eqz v0 l33f9a)
  (line 123)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 ", label=")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v1 v3 antlr/CharLiteralElement.label [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l33f9a)
  (line 125)
  (const-string v0 "")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 126)
  (return-void )
)

(method (attrs public ) gen([object antlr/CharRangeElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/CharRangeElement])
  (line 132)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 "Match character range: ")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v1 v3 antlr/CharRangeElement.beginText [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (const-string v1 "..")
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (iget-object v1 v3 antlr/CharRangeElement.endText [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 133)
  (iget-object v0 v3 antlr/CharRangeElement.label [object java/lang/String])
  (if-eqz v0 l34028)
  (line 134)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 ", label = ")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v1 v3 antlr/CharRangeElement.label [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l34028)
  (line 136)
  (const-string v0 "")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 137)
  (return-void )
)

(method (attrs public ) gen([object antlr/LexerGrammar] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 10)
  ; this: v8 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v9 ([object antlr/LexerGrammar])
  (const/4 v7 0)
  (line 141)
  (invoke-virtual {v8 v9} antlr/DiagnosticCodeGenerator/setGrammar [object antlr/Grammar] )
  (line 142)
  (iget-object v4 v8 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (new-instance v5 java/lang/StringBuilder)
  (const-string v6 "Generating ")
  (invoke-direct {v5 v6} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v6 v8 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v6} antlr/Grammar/getClassName )
  (move-result-object v6)
  (invoke-virtual {v5 v6} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v5)
  (sget-object v6 antlr/DiagnosticCodeGenerator.TokenTypesFileExt [object java/lang/String])
  (invoke-virtual {v5 v6} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v5)
  (invoke-virtual {v5} java/lang/StringBuilder/toString )
  (move-result-object v5)
  (invoke-virtual {v4 v5} antlr/Tool/reportProgress [object java/lang/String] )
  (line 143)
  (iget-object v4 v8 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (new-instance v5 java/lang/StringBuilder)
  (iget-object v6 v8 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v6} antlr/Grammar/getClassName )
  (move-result-object v6)
  (invoke-static {v6} java/lang/String/valueOf [object java/lang/Object] )
  (move-result-object v6)
  (invoke-direct {v5 v6} java/lang/StringBuilder/<init> [object java/lang/String] )
  (sget-object v6 antlr/DiagnosticCodeGenerator.TokenTypesFileExt [object java/lang/String])
  (invoke-virtual {v5 v6} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v5)
  (invoke-virtual {v5} java/lang/StringBuilder/toString )
  (move-result-object v5)
  (invoke-virtual {v4 v5} antlr/Tool/openOutputFile [object java/lang/String] )
  (move-result-object v4)
  (iput-object v4 v8 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (line 146)
  (iput v7 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 147)
  (const/4 v4 1)
  (iput-boolean v4 v8 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (line 150)
  (invoke-virtual {v8} antlr/DiagnosticCodeGenerator/genHeader )
  (line 153)
  (const-string v4 "")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 154)
  (const-string v4 "*** Lexer Preamble Action.")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 155)
  (const-string v4 "This action will appear before the declaration of your lexer class:")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 156)
  (iget v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 1)
  (iput v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 157)
  (iget-object v4 v8 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v4 v4 antlr/Grammar.preambleAction [object antlr/Token])
  (invoke-virtual {v4} antlr/Token/getText )
  (move-result-object v4)
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 158)
  (iget v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 159)
  (const-string v4 "*** End of Lexer Preamble Action")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 162)
  (const-string v4 "")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 163)
  (new-instance v4 java/lang/StringBuilder)
  (const-string v5 "*** Your lexer class is called '")
  (invoke-direct {v4 v5} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v5 v8 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v5} antlr/Grammar/getClassName )
  (move-result-object v5)
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (const-string v5 "' and is a subclass of '")
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (iget-object v5 v8 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v5} antlr/Grammar/getSuperClass )
  (move-result-object v5)
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (const-string v5 "'.")
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/StringBuilder/toString )
  (move-result-object v4)
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 166)
  (const-string v4 "")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 167)
  (const-string v4 "*** User-defined lexer  class members:")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 168)
  (const-string v4 "These are the member declarations that you defined for your class:")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 169)
  (iget v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 1)
  (iput v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 170)
  (iget-object v4 v8 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v4 v4 antlr/Grammar.classMemberAction [object antlr/Token])
  (invoke-virtual {v4} antlr/Token/getText )
  (move-result-object v4)
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/printAction [object java/lang/String] )
  (line 171)
  (iget v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 172)
  (const-string v4 "*** End of user-defined lexer class members")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 175)
  (const-string v4 "")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 176)
  (const-string v4 "*** String literals used in the parser")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 177)
  (const-string v4 "The following string literals were used in the parser.")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 178)
  (const-string v4 "An actual code generator would arrange to place these literals")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 179)
  (const-string v4 "into a table in the generated lexer, so that actions in the")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 180)
  (const-string v4 "generated lexer could match token text against the literals.")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 181)
  (const-string v4 "String literals used in the lexer are not listed here, as they")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 182)
  (const-string v4 "are incorporated into the mainstream lexer processing.")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 183)
  (iget v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 1)
  (iput v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 185)
  (iget-object v4 v8 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getSymbols )
  (move-result-object v0)
  (label l34258)
  (line 186)
  (invoke-interface {v0} java/util/Enumeration/hasMoreElements )
  (move-result v4)
  (if-nez v4 l342f2)
  (line 194)
  (iget v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 195)
  (const-string v4 "*** End of string literals used by the parser")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 200)
  (invoke-virtual {v8} antlr/DiagnosticCodeGenerator/genNextToken )
  (line 203)
  (const-string v4 "")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 204)
  (const-string v4 "*** User-defined Lexer rules:")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 205)
  (iget v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 1)
  (iput v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 207)
  (iget-object v4 v8 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v4 v4 antlr/Grammar.rules [object antlr/collections/impl/Vector])
  (invoke-virtual {v4} antlr/collections/impl/Vector/elements )
  (move-result-object v0)
  (label l342b0)
  (line 208)
  (invoke-interface {v0} java/util/Enumeration/hasMoreElements )
  (move-result v4)
  (if-nez v4 l34352)
  (line 215)
  (iget v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 216)
  (const-string v4 "")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 217)
  (const-string v4 "*** End User-defined Lexer rules:")
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 220)
  (iget-object v4 v8 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (invoke-virtual {v4} java/io/PrintWriter/close )
  (line 221)
  (const/4 v4 0)
  (iput-object v4 v8 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (line 222)
  (iput-boolean v7 v8 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (line 223)
  (return-void )
  (label l342f2)
  (line 187)
  (invoke-interface {v0} java/util/Enumeration/nextElement )
  (move-result-object v3)
  (check-cast v3 [object antlr/GrammarSymbol])
  (label l342fe)
  (line 189)
  (instance-of v4 v3 antlr/StringLiteralSymbol)
  (if-eqz v4 l34258)
  (move-object v2 v3)
  (line 190)
  (check-cast v2 [object antlr/StringLiteralSymbol])
  (label l3430c)
  (line 191)
  (new-instance v4 java/lang/StringBuilder)
  (invoke-virtual {v2} antlr/StringLiteralSymbol/getId )
  (move-result-object v5)
  (invoke-static {v5} java/lang/String/valueOf [object java/lang/Object] )
  (move-result-object v5)
  (invoke-direct {v4 v5} java/lang/StringBuilder/<init> [object java/lang/String] )
  (const-string v5 " = ")
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (invoke-virtual {v2} antlr/StringLiteralSymbol/getTokenType )
  (move-result v5)
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append int )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/StringBuilder/toString )
  (move-result-object v4)
  (invoke-virtual {v8 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto l34258)
  (label l34352)
  (line 209)
  (invoke-interface {v0} java/util/Enumeration/nextElement )
  (move-result-object v1)
  (check-cast v1 [object antlr/RuleSymbol])
  (line 210)
  (iget-object v4 v1 antlr/RuleSymbol.id [object java/lang/String])
  (const-string v5 "mnextToken")
  (invoke-virtual {v4 v5} java/lang/String/equals [object java/lang/Object] )
  (move-result v4)
  (if-nez v4 l342b0)
  (line 211)
  (invoke-virtual {v8 v1} antlr/DiagnosticCodeGenerator/genRule [object antlr/RuleSymbol] )
  (goto l342b0)
)

(method (attrs public ) gen([object antlr/OneOrMoreBlock] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/OneOrMoreBlock])
  (line 229)
  (const-string v1 "Start ONE-OR-MORE (...)+ block:")
  (invoke-virtual {v2 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 230)
  (iget v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v1 v1 1)
  (iput v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (line 231)
  (invoke-virtual {v2 v3} antlr/DiagnosticCodeGenerator/genBlockPreamble [object antlr/AlternativeBlock] )
  (line 232)
  (iget-object v1 v2 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v1 v1 antlr/Grammar.theLLkAnalyzer [object antlr/LLkGrammarAnalyzer])
  (invoke-interface {v1 v3} antlr/LLkGrammarAnalyzer/deterministic [object antlr/OneOrMoreBlock] )
  (move-result v0)
  (line 233)
  (if-nez v0 l343c6)
  (line 234)
  (const-string v1 "Warning: This one-or-more block is non-deterministic")
  (invoke-virtual {v2 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l343c6)
  (line 236)
  (invoke-virtual {v2 v3} antlr/DiagnosticCodeGenerator/genCommonBlock [object antlr/AlternativeBlock] )
  (line 237)
  (iget v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v1 v1 255)
  (iput v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (line 238)
  (const-string v1 "End ONE-OR-MORE block.")
  (invoke-virtual {v2 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 239)
  (return-void )
)

(method (attrs public ) gen([object antlr/ParserGrammar] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 7)
  ; this: v5 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v6 ([object antlr/ParserGrammar])
  (line 243)
  (invoke-virtual {v5 v6} antlr/DiagnosticCodeGenerator/setGrammar [object antlr/Grammar] )
  (line 245)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (new-instance v3 java/lang/StringBuilder)
  (const-string v4 "Generating ")
  (invoke-direct {v3 v4} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v4 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getClassName )
  (move-result-object v4)
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (sget-object v4 antlr/DiagnosticCodeGenerator.TokenTypesFileExt [object java/lang/String])
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (invoke-virtual {v3} java/lang/StringBuilder/toString )
  (move-result-object v3)
  (invoke-virtual {v2 v3} antlr/Tool/reportProgress [object java/lang/String] )
  (line 246)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (new-instance v3 java/lang/StringBuilder)
  (iget-object v4 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getClassName )
  (move-result-object v4)
  (invoke-static {v4} java/lang/String/valueOf [object java/lang/Object] )
  (move-result-object v4)
  (invoke-direct {v3 v4} java/lang/StringBuilder/<init> [object java/lang/String] )
  (sget-object v4 antlr/DiagnosticCodeGenerator.TokenTypesFileExt [object java/lang/String])
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (invoke-virtual {v3} java/lang/StringBuilder/toString )
  (move-result-object v3)
  (invoke-virtual {v2 v3} antlr/Tool/openOutputFile [object java/lang/String] )
  (move-result-object v2)
  (iput-object v2 v5 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (line 249)
  (const/4 v2 0)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 252)
  (invoke-virtual {v5} antlr/DiagnosticCodeGenerator/genHeader )
  (line 255)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 256)
  (const-string v2 "*** Parser Preamble Action.")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 257)
  (const-string v2 "This action will appear before the declaration of your parser class:")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 258)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 1)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 259)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v2 v2 antlr/Grammar.preambleAction [object antlr/Token])
  (invoke-virtual {v2} antlr/Token/getText )
  (move-result-object v2)
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 260)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 255)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 261)
  (const-string v2 "*** End of Parser Preamble Action")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 264)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 265)
  (new-instance v2 java/lang/StringBuilder)
  (const-string v3 "*** Your parser class is called '")
  (invoke-direct {v2 v3} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v3 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v3} antlr/Grammar/getClassName )
  (move-result-object v3)
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (const-string v3 "' and is a subclass of '")
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (iget-object v3 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v3} antlr/Grammar/getSuperClass )
  (move-result-object v3)
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (const-string v3 "'.")
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual {v2} java/lang/StringBuilder/toString )
  (move-result-object v2)
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 268)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 269)
  (const-string v2 "*** User-defined parser class members:")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 270)
  (const-string v2 "These are the member declarations that you defined for your class:")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 271)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 1)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 272)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v2 v2 antlr/Grammar.classMemberAction [object antlr/Token])
  (invoke-virtual {v2} antlr/Token/getText )
  (move-result-object v2)
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/printAction [object java/lang/String] )
  (line 273)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 255)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 274)
  (const-string v2 "*** End of user-defined parser class members")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 277)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 278)
  (const-string v2 "*** Parser rules:")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 279)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 1)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 282)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v2 v2 antlr/Grammar.rules [object antlr/collections/impl/Vector])
  (invoke-virtual {v2} antlr/collections/impl/Vector/elements )
  (move-result-object v0)
  (label l345ca)
  (line 283)
  (invoke-interface {v0} java/util/Enumeration/hasMoreElements )
  (move-result v2)
  (if-nez v2 l3461c)
  (line 292)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 255)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 293)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 294)
  (const-string v2 "*** End of parser rules")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 296)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 297)
  (const-string v2 "*** End of parser")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 300)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (invoke-virtual {v2} java/io/PrintWriter/close )
  (line 301)
  (const/4 v2 0)
  (iput-object v2 v5 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (line 302)
  (return-void )
  (label l3461c)
  (line 284)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 286)
  (invoke-interface {v0} java/util/Enumeration/nextElement )
  (move-result-object v1)
  (check-cast v1 [object antlr/GrammarSymbol])
  (label l34632)
  (line 288)
  (instance-of v2 v1 antlr/RuleSymbol)
  (if-eqz v2 l345ca)
  (line 289)
  (check-cast v1 [object antlr/RuleSymbol])
  (label l3463e)
  (invoke-virtual {v5 v1} antlr/DiagnosticCodeGenerator/genRule [object antlr/RuleSymbol] )
  (goto l345ca)
)

(method (attrs public ) gen([object antlr/RuleRefElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 5)
  ; this: v3 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v4 ([object antlr/RuleRefElement])
  (line 308)
  (iget-object v1 v3 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v2 v4 antlr/RuleRefElement.targetRule [object java/lang/String])
  (invoke-virtual {v1 v2} antlr/Grammar/getSymbol [object java/lang/String] )
  (move-result-object v0)
  (check-cast v0 [object antlr/RuleSymbol])
  (line 311)
  (new-instance v1 java/lang/StringBuilder)
  (const-string v2 "Rule Reference: ")
  (invoke-direct {v1 v2} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v2 v4 antlr/RuleRefElement.targetRule [object java/lang/String])
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuilder/toString )
  (move-result-object v1)
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 312)
  (iget-object v1 v4 antlr/RuleRefElement.idAssign [object java/lang/String])
  (if-eqz v1 l346d0)
  (line 313)
  (new-instance v1 java/lang/StringBuilder)
  (const-string v2 ", assigned to '")
  (invoke-direct {v1 v2} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v2 v4 antlr/RuleRefElement.idAssign [object java/lang/String])
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (const-string v2 "'")
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuilder/toString )
  (move-result-object v1)
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l346d0)
  (line 315)
  (iget-object v1 v4 antlr/RuleRefElement.args [object java/lang/String])
  (if-eqz v1 l34700)
  (line 316)
  (new-instance v1 java/lang/StringBuilder)
  (const-string v2 ", arguments = ")
  (invoke-direct {v1 v2} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v2 v4 antlr/RuleRefElement.args [object java/lang/String])
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuilder/toString )
  (move-result-object v1)
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l34700)
  (line 318)
  (const-string v1 "")
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 321)
  (if-eqz v0 l3471a)
  (invoke-virtual {v0} antlr/RuleSymbol/isDefined )
  (move-result v1)
  (if-nez v1 l3475a)
  (label l3471a)
  (line 322)
  (new-instance v1 java/lang/StringBuilder)
  (const-string v2 "Rule '")
  (invoke-direct {v1 v2} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v2 v4 antlr/RuleRefElement.targetRule [object java/lang/String])
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (const-string v2 "' is referenced, but that rule is not defined.")
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuilder/toString )
  (move-result-object v1)
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 323)
  (const-string v1 "\tPerhaps the rule is misspelled, or you forgot to define it.")
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l34758)
  (line 346)
  (return-void )
  (label l3475a)
  (line 326)
  (instance-of v1 v0 antlr/RuleSymbol)
  (if-nez v1 l34798)
  (line 328)
  (new-instance v1 java/lang/StringBuilder)
  (const-string v2 "Rule '")
  (invoke-direct {v1 v2} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v2 v4 antlr/RuleRefElement.targetRule [object java/lang/String])
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (const-string v2 "' is referenced, but that is not a grammar rule.")
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuilder/toString )
  (move-result-object v1)
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto l34758)
  (label l34798)
  (line 331)
  (iget-object v1 v4 antlr/RuleRefElement.idAssign [object java/lang/String])
  (if-eqz v1 l3482a)
  (line 333)
  (iget-object v1 v0 antlr/RuleSymbol.block [object antlr/RuleBlock])
  (iget-object v1 v1 antlr/RuleBlock.returnAction [object java/lang/String])
  (if-nez v1 l347e0)
  (line 334)
  (new-instance v1 java/lang/StringBuilder)
  (const-string v2 "Error: You assigned from Rule '")
  (invoke-direct {v1 v2} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v2 v4 antlr/RuleRefElement.targetRule [object java/lang/String])
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (const-string v2 "', but that rule has no return type.")
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuilder/toString )
  (move-result-object v1)
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l347e0)
  (line 343)
  (iget-object v1 v4 antlr/RuleRefElement.args [object java/lang/String])
  (if-eqz v1 l34758)
  (iget-object v1 v0 antlr/RuleSymbol.block [object antlr/RuleBlock])
  (iget-object v1 v1 antlr/RuleBlock.argAction [object java/lang/String])
  (if-nez v1 l34758)
  (line 344)
  (new-instance v1 java/lang/StringBuilder)
  (const-string v2 "Error: Rule '")
  (invoke-direct {v1 v2} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v2 v4 antlr/RuleRefElement.targetRule [object java/lang/String])
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (const-string v2 "' accepts no arguments.")
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuilder/toString )
  (move-result-object v1)
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto l34758)
  (label l3482a)
  (line 339)
  (iget-object v1 v3 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (instance-of v1 v1 antlr/LexerGrammar)
  (if-nez v1 l347e0)
  (iget v1 v3 antlr/DiagnosticCodeGenerator.syntacticPredLevel int)
  (if-nez v1 l347e0)
  (iget-object v1 v0 antlr/RuleSymbol.block [object antlr/RuleBlock])
  (iget-object v1 v1 antlr/RuleBlock.returnAction [object java/lang/String])
  (if-eqz v1 l347e0)
  (line 340)
  (new-instance v1 java/lang/StringBuilder)
  (const-string v2 "Warning: Rule '")
  (invoke-direct {v1 v2} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v2 v4 antlr/RuleRefElement.targetRule [object java/lang/String])
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (const-string v2 "' returns a value")
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuilder/toString )
  (move-result-object v1)
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto l347e0)
)

(method (attrs public ) gen([object antlr/StringLiteralElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/StringLiteralElement])
  (line 352)
  (const-string v0 "Match string literal ")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 353)
  (iget-object v0 v3 antlr/StringLiteralElement.atomText [object java/lang/String])
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (line 354)
  (iget-object v0 v3 antlr/StringLiteralElement.label [object java/lang/String])
  (if-eqz v0 l348d4)
  (line 355)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 ", label=")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v1 v3 antlr/StringLiteralElement.label [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l348d4)
  (line 357)
  (const-string v0 "")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 358)
  (return-void )
)

(method (attrs public ) gen([object antlr/TokenRangeElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/TokenRangeElement])
  (line 364)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 "Match token range: ")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v1 v3 antlr/TokenRangeElement.beginText [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (const-string v1 "..")
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (iget-object v1 v3 antlr/TokenRangeElement.endText [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 365)
  (iget-object v0 v3 antlr/TokenRangeElement.label [object java/lang/String])
  (if-eqz v0 l34960)
  (line 366)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 ", label = ")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v1 v3 antlr/TokenRangeElement.label [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l34960)
  (line 368)
  (const-string v0 "")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 369)
  (return-void )
)

(method (attrs public ) gen([object antlr/TokenRefElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/TokenRefElement])
  (line 375)
  (const-string v0 "Match token ")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 376)
  (iget-boolean v0 v3 antlr/TokenRefElement.not boolean)
  (if-eqz v0 l34998)
  (line 377)
  (const-string v0 "NOT ")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l34998)
  (line 379)
  (iget-object v0 v3 antlr/TokenRefElement.atomText [object java/lang/String])
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (line 380)
  (iget-object v0 v3 antlr/TokenRefElement.label [object java/lang/String])
  (if-eqz v0 l349d2)
  (line 381)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 ", label=")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v1 v3 antlr/TokenRefElement.label [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l349d2)
  (line 383)
  (const-string v0 "")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 384)
  (return-void )
)

(method (attrs public ) gen([object antlr/TreeElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/TreeElement])
  (line 387)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 "Tree reference: ")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v0 v3} java/lang/StringBuilder/append [object java/lang/Object] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 388)
  (return-void )
)

(method (attrs public ) gen([object antlr/TreeWalkerGrammar] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 7)
  ; this: v5 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v6 ([object antlr/TreeWalkerGrammar])
  (line 392)
  (invoke-virtual {v5 v6} antlr/DiagnosticCodeGenerator/setGrammar [object antlr/Grammar] )
  (line 394)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (new-instance v3 java/lang/StringBuilder)
  (const-string v4 "Generating ")
  (invoke-direct {v3 v4} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v4 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getClassName )
  (move-result-object v4)
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (sget-object v4 antlr/DiagnosticCodeGenerator.TokenTypesFileExt [object java/lang/String])
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (invoke-virtual {v3} java/lang/StringBuilder/toString )
  (move-result-object v3)
  (invoke-virtual {v2 v3} antlr/Tool/reportProgress [object java/lang/String] )
  (line 395)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (new-instance v3 java/lang/StringBuilder)
  (iget-object v4 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v4} antlr/Grammar/getClassName )
  (move-result-object v4)
  (invoke-static {v4} java/lang/String/valueOf [object java/lang/Object] )
  (move-result-object v4)
  (invoke-direct {v3 v4} java/lang/StringBuilder/<init> [object java/lang/String] )
  (sget-object v4 antlr/DiagnosticCodeGenerator.TokenTypesFileExt [object java/lang/String])
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (invoke-virtual {v3} java/lang/StringBuilder/toString )
  (move-result-object v3)
  (invoke-virtual {v2 v3} antlr/Tool/openOutputFile [object java/lang/String] )
  (move-result-object v2)
  (iput-object v2 v5 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (line 398)
  (const/4 v2 0)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 401)
  (invoke-virtual {v5} antlr/DiagnosticCodeGenerator/genHeader )
  (line 404)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 405)
  (const-string v2 "*** Tree-walker Preamble Action.")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 406)
  (const-string v2 "This action will appear before the declaration of your tree-walker class:")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 407)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 1)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 408)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v2 v2 antlr/Grammar.preambleAction [object antlr/Token])
  (invoke-virtual {v2} antlr/Token/getText )
  (move-result-object v2)
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 409)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 255)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 410)
  (const-string v2 "*** End of tree-walker Preamble Action")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 413)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 414)
  (new-instance v2 java/lang/StringBuilder)
  (const-string v3 "*** Your tree-walker class is called '")
  (invoke-direct {v2 v3} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v3 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v3} antlr/Grammar/getClassName )
  (move-result-object v3)
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (const-string v3 "' and is a subclass of '")
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (iget-object v3 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v3} antlr/Grammar/getSuperClass )
  (move-result-object v3)
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (const-string v3 "'.")
  (invoke-virtual {v2 v3} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v2)
  (invoke-virtual {v2} java/lang/StringBuilder/toString )
  (move-result-object v2)
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 417)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 418)
  (const-string v2 "*** User-defined tree-walker class members:")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 419)
  (const-string v2 "These are the member declarations that you defined for your class:")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 420)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 1)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 421)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v2 v2 antlr/Grammar.classMemberAction [object antlr/Token])
  (invoke-virtual {v2} antlr/Token/getText )
  (move-result-object v2)
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/printAction [object java/lang/String] )
  (line 422)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 255)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 423)
  (const-string v2 "*** End of user-defined tree-walker class members")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 426)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 427)
  (const-string v2 "*** tree-walker rules:")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 428)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 1)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 431)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v2 v2 antlr/Grammar.rules [object antlr/collections/impl/Vector])
  (invoke-virtual {v2} antlr/collections/impl/Vector/elements )
  (move-result-object v0)
  (label l34bfe)
  (line 432)
  (invoke-interface {v0} java/util/Enumeration/hasMoreElements )
  (move-result v2)
  (if-nez v2 l34c50)
  (line 441)
  (iget v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v2 v2 255)
  (iput v2 v5 antlr/DiagnosticCodeGenerator.tabs int)
  (line 442)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 443)
  (const-string v2 "*** End of tree-walker rules")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 445)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 446)
  (const-string v2 "*** End of tree-walker")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 449)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (invoke-virtual {v2} java/io/PrintWriter/close )
  (line 450)
  (const/4 v2 0)
  (iput-object v2 v5 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (line 451)
  (return-void )
  (label l34c50)
  (line 433)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 435)
  (invoke-interface {v0} java/util/Enumeration/nextElement )
  (move-result-object v1)
  (check-cast v1 [object antlr/GrammarSymbol])
  (label l34c66)
  (line 437)
  (instance-of v2 v1 antlr/RuleSymbol)
  (if-eqz v2 l34bfe)
  (line 438)
  (check-cast v1 [object antlr/RuleSymbol])
  (label l34c72)
  (invoke-virtual {v5 v1} antlr/DiagnosticCodeGenerator/genRule [object antlr/RuleSymbol] )
  (goto l34bfe)
)

(method (attrs public ) gen([object antlr/WildcardElement] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/WildcardElement])
  (line 455)
  (const-string v0 "Match wildcard")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 456)
  (invoke-virtual {v3} antlr/WildcardElement/getLabel )
  (move-result-object v0)
  (if-eqz v0 l34cce)
  (line 457)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 ", label = ")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v3} antlr/WildcardElement/getLabel )
  (move-result-object v1)
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l34cce)
  (line 459)
  (const-string v0 "")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 460)
  (return-void )
)

(method (attrs public ) gen([object antlr/ZeroOrMoreBlock] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/ZeroOrMoreBlock])
  (line 466)
  (const-string v1 "Start ZERO-OR-MORE (...)+ block:")
  (invoke-virtual {v2 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 467)
  (iget v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v1 v1 1)
  (iput v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (line 468)
  (invoke-virtual {v2 v3} antlr/DiagnosticCodeGenerator/genBlockPreamble [object antlr/AlternativeBlock] )
  (line 469)
  (iget-object v1 v2 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v1 v1 antlr/Grammar.theLLkAnalyzer [object antlr/LLkGrammarAnalyzer])
  (invoke-interface {v1 v3} antlr/LLkGrammarAnalyzer/deterministic [object antlr/ZeroOrMoreBlock] )
  (move-result v0)
  (line 470)
  (if-nez v0 l34d26)
  (line 471)
  (const-string v1 "Warning: This zero-or-more block is non-deterministic")
  (invoke-virtual {v2 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l34d26)
  (line 473)
  (invoke-virtual {v2 v3} antlr/DiagnosticCodeGenerator/genCommonBlock [object antlr/AlternativeBlock] )
  (line 474)
  (iget v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v1 v1 255)
  (iput v1 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (line 475)
  (const-string v1 "End ZERO-OR-MORE block.")
  (invoke-virtual {v2 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 476)
  (return-void )
)

(method (attrs protected ) genAlt([object antlr/Alternative] )void
  (limit registers 5)
  ; this: v3 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v4 ([object antlr/Alternative])
  (line 480)
  (iget-object v0 v4 antlr/Alternative.head [object antlr/AlternativeElement])
  (label l34d58)
  (line 481)
  (instance-of v1 v0 antlr/BlockEndElement)
  (line 479)
  (if-eqz v1 l34da2)
  (line 486)
  (invoke-virtual {v4} antlr/Alternative/getTreeSpecifier )
  (move-result-object v1)
  (if-eqz v1 l34da0)
  (line 487)
  (new-instance v1 java/lang/StringBuilder)
  (const-string v2 "AST will be built as: ")
  (invoke-direct {v1 v2} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v4} antlr/Alternative/getTreeSpecifier )
  (move-result-object v2)
  (invoke-virtual {v2} antlr/Token/getText )
  (move-result-object v2)
  (invoke-virtual {v1 v2} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v1} java/lang/StringBuilder/toString )
  (move-result-object v1)
  (invoke-virtual {v3 v1} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l34da0)
  (line 489)
  (return-void )
  (label l34da2)
  (line 484)
  (invoke-virtual {v0} antlr/AlternativeElement/generate )
  (line 482)
  (iget-object v0 v0 antlr/AlternativeElement.next [object antlr/AlternativeElement])
  (goto l34d58)
)

(method (attrs protected ) genBlockPreamble([object antlr/AlternativeBlock] )void
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/AlternativeBlock])
  (line 498)
  (iget-object v0 v3 antlr/AlternativeBlock.initAction [object java/lang/String])
  (if-eqz v0 l34df0)
  (line 499)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 "Init action: ")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v1 v3 antlr/AlternativeBlock.initAction [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/printAction [object java/lang/String] )
  (label l34df0)
  (line 501)
  (return-void )
)

(method (attrs public ) genCommonBlock([object antlr/AlternativeBlock] )void
  (limit registers 8)
  ; this: v6 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v7 ([object antlr/AlternativeBlock])
  (const/4 v3 1)
  (const/4 v4 0)
  (line 509)
  (iget-object v5 v7 antlr/AlternativeBlock.alternatives [object antlr/collections/impl/Vector])
  (invoke-virtual {v5} antlr/collections/impl/Vector/size )
  (move-result v5)
  (if-ne v5 v3 l34eea)
  (label l34e18)
  (line 511)
  (const-string v5 "Start of an alternative block.")
  (invoke-virtual {v6 v5} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 512)
  (iget v5 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v5 v5 1)
  (iput v5 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 513)
  (const-string v5 "The lookahead set for this block is:")
  (invoke-virtual {v6 v5} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 514)
  (iget v5 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v5 v5 1)
  (iput v5 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 515)
  (invoke-virtual {v6 v7} antlr/DiagnosticCodeGenerator/genLookaheadSetForBlock [object antlr/AlternativeBlock] )
  (line 516)
  (iget v5 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v5 v5 255)
  (iput v5 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 518)
  (if-eqz v3 l34eee)
  (line 519)
  (const-string v5 "This block has a single alternative")
  (invoke-virtual {v6 v5} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 520)
  (invoke-virtual {v7 v4} antlr/AlternativeBlock/getAlternativeAt int )
  (move-result-object v4)
  (iget-object v4 v4 antlr/Alternative.synPred [object antlr/SynPredBlock])
  (if-eqz v4 l34e88)
  (line 522)
  (const-string v4 "Warning: you specified a syntactic predicate for this alternative,")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 523)
  (const-string v4 "and it is the only alternative of a block and will be ignored.")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l34e88)
  (line 531)
  (const/4 v2 0)
  (label l34e8a)
  (iget-object v4 v7 antlr/AlternativeBlock.alternatives [object antlr/collections/impl/Vector])
  (invoke-virtual {v4} antlr/collections/impl/Vector/size )
  (move-result v4)
  (if-lt v2 v4 l34f06)
  (line 580)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 581)
  (const-string v4 "OTHERWISE, a NoViableAlt exception will be thrown")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 582)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 584)
  (if-nez v3 l34ed2)
  (line 585)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 586)
  (const-string v4 "End of alternatives")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l34ed2)
  (line 588)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 589)
  (const-string v4 "End of alternative block.")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 590)
  (return-void )
  (label l34eea)
  (move v3 v4)
  (line 509)
  (goto l34e18)
  (label l34eee)
  (line 527)
  (const-string v4 "This block has multiple alternatives:")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 528)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 1)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (goto l34e88)
  (label l34f06)
  (line 532)
  (invoke-virtual {v7 v2} antlr/AlternativeBlock/getAlternativeAt int )
  (move-result-object v0)
  (line 533)
  (iget-object v1 v0 antlr/Alternative.head [object antlr/AlternativeElement])
  (line 536)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 537)
  (if-eqz v2 l35026)
  (line 538)
  (const-string v4 "Otherwise, ")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (label l34f2a)
  (line 543)
  (new-instance v4 java/lang/StringBuilder)
  (const-string v5 "Alternate(")
  (invoke-direct {v4 v5} java/lang/StringBuilder/<init> [object java/lang/String] )
  (add-int/lit8 v5 v2 1)
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append int )
  (move-result-object v4)
  (const-string v5 ") will be taken IF:")
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/StringBuilder/toString )
  (move-result-object v4)
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 544)
  (const-string v4 "The lookahead set: ")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 545)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 1)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 546)
  (invoke-virtual {v6 v0} antlr/DiagnosticCodeGenerator/genLookaheadSetForAlt [object antlr/Alternative] )
  (line 547)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 548)
  (iget-object v4 v0 antlr/Alternative.semPred [object java/lang/String])
  (if-nez v4 l34f96)
  (iget-object v4 v0 antlr/Alternative.synPred [object antlr/SynPredBlock])
  (if-eqz v4 l35034)
  (label l34f96)
  (line 549)
  (const-string v4 "is matched, AND ")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (label l34fa0)
  (line 556)
  (iget-object v4 v0 antlr/Alternative.semPred [object java/lang/String])
  (if-eqz v4 l34fda)
  (line 557)
  (const-string v4 "the semantic predicate:")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 558)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 1)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 559)
  (iget-object v4 v0 antlr/Alternative.semPred [object java/lang/String])
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 560)
  (iget-object v4 v0 antlr/Alternative.synPred [object antlr/SynPredBlock])
  (if-eqz v4 l35040)
  (line 561)
  (const-string v4 "is true, AND ")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (label l34fda)
  (line 569)
  (iget-object v4 v0 antlr/Alternative.synPred [object antlr/SynPredBlock])
  (if-eqz v4 l35018)
  (line 570)
  (const-string v4 "the syntactic predicate:")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 571)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 1)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 572)
  (iget-object v4 v0 antlr/Alternative.synPred [object antlr/SynPredBlock])
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/genSynPred [object antlr/SynPredBlock] )
  (line 573)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 574)
  (const-string v4 "is matched.")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l35018)
  (line 578)
  (invoke-virtual {v6 v0} antlr/DiagnosticCodeGenerator/genAlt [object antlr/Alternative] )
  (line 531)
  (add-int/lit8 v2 v2 1)
  (goto/16 l34e8a)
  (label l35026)
  (line 541)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (goto/16 l34f2a)
  (label l35034)
  (line 552)
  (const-string v4 "is matched.")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto l34fa0)
  (label l35040)
  (line 564)
  (const-string v4 "is true.")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto l34fda)
)

(method (attrs public ) genFollowSetForRuleBlock([object antlr/RuleBlock] )void
  (limit registers 6)
  ; this: v4 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v5 ([object antlr/RuleBlock])
  (const/4 v3 1)
  (line 597)
  (iget-object v1 v4 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v1 v1 antlr/Grammar.theLLkAnalyzer [object antlr/LLkGrammarAnalyzer])
  (iget-object v2 v5 antlr/RuleBlock.endNode [object antlr/RuleEndElement])
  (invoke-interface {v1 v3 v2} antlr/LLkGrammarAnalyzer/FOLLOW int [object antlr/RuleEndElement] )
  (move-result-object v0)
  (line 598)
  (iget-object v1 v4 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget v1 v1 antlr/Grammar.maxk int)
  (invoke-virtual {v4 v1 v3 v0} antlr/DiagnosticCodeGenerator/printSet int int [object antlr/Lookahead] )
  (line 599)
  (return-void )
)

(method (attrs protected ) genHeader()void
  (limit registers 3)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  (line 603)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 "ANTLR-generated file resulting from grammar ")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v1 v2 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (iget-object v1 v1 antlr/Tool.grammarFile [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 604)
  (const-string v0 "Diagnostic output")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 605)
  (const-string v0 "")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 606)
  (const-string v0 "Terence Parr, MageLang Institute")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 607)
  (const-string v0 "with John Lilley, Empathy Software")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 608)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 "ANTLR Version ")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (sget-object v1 antlr/Tool.version [object java/lang/String])
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (const-string v1 "; 1996,1997")
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 609)
  (const-string v0 "")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 610)
  (const-string v0 "*** Header Action.")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 611)
  (const-string v0 "This action will appear at the top of all generated files.")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 612)
  (iget v0 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v0 v0 1)
  (iput v0 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (line 613)
  (iget-object v0 v2 antlr/DiagnosticCodeGenerator.behavior [object antlr/DefineGrammarSymbols])
  (const-string v1 "")
  (invoke-virtual {v0 v1} antlr/DefineGrammarSymbols/getHeaderAction [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/printAction [object java/lang/String] )
  (line 614)
  (iget v0 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v0 v0 255)
  (iput v0 v2 antlr/DiagnosticCodeGenerator.tabs int)
  (line 615)
  (const-string v0 "*** End of Header Action")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 616)
  (const-string v0 "")
  (invoke-virtual {v2 v0} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 617)
  (return-void )
)

(method (attrs protected ) genLookaheadSetForAlt([object antlr/Alternative] )void
  (limit registers 7)
  ; this: v5 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v6 ([object antlr/Alternative])
  (line 621)
  (iget-boolean v3 v5 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (if-eqz v3 l351ba)
  (iget-object v3 v6 antlr/Alternative.cache [array [object antlr/Lookahead]])
  (const/4 v4 1)
  (aget-object v3 v3 v4)
  (invoke-virtual {v3} antlr/Lookahead/containsEpsilon )
  (move-result v3)
  (if-eqz v3 l351ba)
  (line 622)
  (const-string v3 "MATCHES ALL")
  (invoke-virtual {v5 v3} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l351b8)
  (line 635)
  (return-void )
  (label l351ba)
  (line 625)
  (iget v0 v6 antlr/Alternative.lookaheadDepth int)
  (line 626)
  (const v3 2147483647) ; 0x7fffffff)
  (if-ne v0 v3 l351d0)
  (line 629)
  (iget-object v3 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget v0 v3 antlr/Grammar.maxk int)
  (label l351d0)
  (line 631)
  (const/4 v1 1)
  (label l351d2)
  (if-gt v1 v0 l351b8)
  (line 632)
  (iget-object v3 v6 antlr/Alternative.cache [array [object antlr/Lookahead]])
  (aget-object v2 v3 v1)
  (line 633)
  (invoke-virtual {v5 v0 v1 v2} antlr/DiagnosticCodeGenerator/printSet int int [object antlr/Lookahead] )
  (line 631)
  (add-int/lit8 v1 v1 1)
  (goto l351d2)
)

(method (attrs public ) genLookaheadSetForBlock([object antlr/AlternativeBlock] )void
  (limit registers 8)
  ; this: v6 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v7 ([object antlr/AlternativeBlock])
  (line 643)
  (const/4 v1 0)
  (line 644)
  (const/4 v2 0)
  (label l35200)
  (iget-object v4 v7 antlr/AlternativeBlock.alternatives [object antlr/collections/impl/Vector])
  (invoke-virtual {v4} antlr/collections/impl/Vector/size )
  (move-result v4)
  (if-lt v2 v4 l35218)
  (label l35210)
  (line 655)
  (const/4 v2 1)
  (label l35212)
  (if-le v2 v1 l3524a)
  (line 659)
  (return-void )
  (label l35218)
  (line 645)
  (invoke-virtual {v7 v2} antlr/AlternativeBlock/getAlternativeAt int )
  (move-result-object v0)
  (label l35220)
  (line 646)
  (iget v4 v0 antlr/Alternative.lookaheadDepth int)
  (const v5 2147483647) ; 0x7fffffff)
  (if-ne v4 v5 l35238)
  (line 647)
  (iget-object v4 v6 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget v1 v4 antlr/Grammar.maxk int)
  (line 648)
  (goto l35210)
  (label l35238)
  (line 650)
  (iget v4 v0 antlr/Alternative.lookaheadDepth int)
  (if-ge v1 v4 l35244)
  (line 651)
  (iget v1 v0 antlr/Alternative.lookaheadDepth int)
  (label l35244)
  (line 644)
  (add-int/lit8 v2 v2 1)
  (goto l35200)
  (label l3524a)
  (line 656)
  (iget-object v4 v6 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v4 v4 antlr/Grammar.theLLkAnalyzer [object antlr/LLkGrammarAnalyzer])
  (invoke-interface {v4 v2 v7} antlr/LLkGrammarAnalyzer/look int [object antlr/AlternativeBlock] )
  (move-result-object v3)
  (line 657)
  (invoke-virtual {v6 v1 v2 v3} antlr/DiagnosticCodeGenerator/printSet int int [object antlr/Lookahead] )
  (line 655)
  (add-int/lit8 v2 v2 1)
  (goto l35212)
)

(method (attrs public ) genNextToken()void
  (limit registers 6)
  ; this: v5 ([object antlr/DiagnosticCodeGenerator])
  (line 666)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 667)
  (const-string v2 "*** Lexer nextToken rule:")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 668)
  (const-string v2 "The lexer nextToken rule is synthesized from all of the user-defined")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 669)
  (const-string v2 "lexer rules.  It logically consists of one big alternative block with")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 670)
  (const-string v2 "each user-defined rule being an alternative.")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 671)
  (const-string v2 "")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 675)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v3 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v3 v3 antlr/Grammar.rules [object antlr/collections/impl/Vector])
  (const-string v4 "nextToken")
  (invoke-static {v2 v3 v4} antlr/MakeGrammar/createNextTokenRule [object antlr/Grammar] [object antlr/collections/impl/Vector] [object java/lang/String] )
  (move-result-object v0)
  (line 678)
  (new-instance v1 antlr/RuleSymbol)
  (const-string v2 "mnextToken")
  (invoke-direct {v1 v2} antlr/RuleSymbol/<init> [object java/lang/String] )
  (line 679)
  (invoke-virtual {v1} antlr/RuleSymbol/setDefined )
  (line 680)
  (invoke-virtual {v1 v0} antlr/RuleSymbol/setBlock [object antlr/RuleBlock] )
  (line 681)
  (const-string v2 "private")
  (iput-object v2 v1 antlr/RuleSymbol.access [object java/lang/String])
  (line 682)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (invoke-virtual {v2 v1} antlr/Grammar/define [object antlr/RuleSymbol] )
  (line 685)
  (iget-object v2 v5 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v2 v2 antlr/Grammar.theLLkAnalyzer [object antlr/LLkGrammarAnalyzer])
  (invoke-interface {v2 v0} antlr/LLkGrammarAnalyzer/deterministic [object antlr/AlternativeBlock] )
  (move-result v2)
  (if-nez v2 l35334)
  (line 686)
  (const-string v2 "The grammar analyzer has determined that the synthesized")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 687)
  (const-string v2 "nextToken rule is non-deterministic (i.e., it has ambiguities)")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 688)
  (const-string v2 "This means that there is some overlap of the character")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 689)
  (const-string v2 "lookahead for two or more of your lexer rules.")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l35334)
  (line 692)
  (invoke-virtual {v5 v0} antlr/DiagnosticCodeGenerator/genCommonBlock [object antlr/AlternativeBlock] )
  (line 694)
  (const-string v2 "*** End of nextToken lexer rule.")
  (invoke-virtual {v5 v2} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 695)
  (return-void )
)

(method (attrs public ) genRule([object antlr/RuleSymbol] )void
  (limit registers 10)
  ; this: v8 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v9 ([object antlr/RuleSymbol])
  (line 701)
  (const-string v6 "")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 702)
  (iget-boolean v6 v8 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (if-eqz v6 l3542e)
  (const-string v4 "Lexer")
  (label l3536e)
  (line 703)
  (new-instance v6 java/lang/StringBuilder)
  (const-string v7 "*** ")
  (invoke-direct {v6 v7} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v6 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (const-string v7 " Rule: ")
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v9} antlr/RuleSymbol/getId )
  (move-result-object v7)
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v6} java/lang/StringBuilder/toString )
  (move-result-object v6)
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 704)
  (invoke-virtual {v9} antlr/RuleSymbol/isDefined )
  (move-result v6)
  (if-nez v6 l35434)
  (line 705)
  (const-string v6 "This rule is undefined.")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 706)
  (const-string v6 "This means that the rule was referenced somewhere in the grammar,")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 707)
  (const-string v6 "but a definition for the rule was not encountered.")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 708)
  (const-string v6 "It is also possible that syntax errors during the parse of")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 709)
  (const-string v6 "your grammar file prevented correct processing of the rule.")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 710)
  (new-instance v6 java/lang/StringBuilder)
  (const-string v7 "*** End ")
  (invoke-direct {v6 v7} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v6 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (const-string v7 " Rule: ")
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v9} antlr/RuleSymbol/getId )
  (move-result-object v7)
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v6} java/lang/StringBuilder/toString )
  (move-result-object v6)
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l3542c)
  (line 791)
  (return-void )
  (label l3542e)
  (line 702)
  (const-string v4 "Parser")
  (goto l3536e)
  (label l35434)
  (line 713)
  (iget v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v6 v6 1)
  (iput v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 715)
  (iget-object v6 v9 antlr/RuleSymbol.access [object java/lang/String])
  (invoke-virtual {v6} java/lang/String/length )
  (move-result v6)
  (if-eqz v6 l35478)
  (line 716)
  (new-instance v6 java/lang/StringBuilder)
  (const-string v7 "Access: ")
  (invoke-direct {v6 v7} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v7 v9 antlr/RuleSymbol.access [object java/lang/String])
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v6} java/lang/StringBuilder/toString )
  (move-result-object v6)
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l35478)
  (line 720)
  (invoke-virtual {v9} antlr/RuleSymbol/getBlock )
  (move-result-object v3)
  (line 723)
  (iget-object v6 v3 antlr/RuleBlock.returnAction [object java/lang/String])
  (if-eqz v6 l355f4)
  (line 724)
  (new-instance v6 java/lang/StringBuilder)
  (const-string v7 "Return value(s): ")
  (invoke-direct {v6 v7} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v7 v3 antlr/RuleBlock.returnAction [object java/lang/String])
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v6} java/lang/StringBuilder/toString )
  (move-result-object v6)
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 725)
  (iget-boolean v6 v8 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (if-eqz v6 l354cc)
  (line 726)
  (const-string v6 "Error: you specified return value(s) for a lexical rule.")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 727)
  (const-string v6 "\tLexical rules have an implicit return type of 'int'.")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l354cc)
  (line 740)
  (iget-object v6 v3 antlr/RuleBlock.argAction [object java/lang/String])
  (if-eqz v6 l354fc)
  (line 741)
  (new-instance v6 java/lang/StringBuilder)
  (const-string v7 "Arguments: ")
  (invoke-direct {v6 v7} java/lang/StringBuilder/<init> [object java/lang/String] )
  (iget-object v7 v3 antlr/RuleBlock.argAction [object java/lang/String])
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v6} java/lang/StringBuilder/toString )
  (move-result-object v6)
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l354fc)
  (line 745)
  (invoke-virtual {v8 v3} antlr/DiagnosticCodeGenerator/genBlockPreamble [object antlr/AlternativeBlock] )
  (line 748)
  (iget-object v6 v8 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v6 v6 antlr/Grammar.theLLkAnalyzer [object antlr/LLkGrammarAnalyzer])
  (invoke-interface {v6 v3} antlr/LLkGrammarAnalyzer/deterministic [object antlr/AlternativeBlock] )
  (move-result v2)
  (label l35512)
  (line 749)
  (if-nez v2 l35520)
  (line 750)
  (const-string v6 "Error: This rule is non-deterministic")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l35520)
  (line 754)
  (invoke-virtual {v8 v3} antlr/DiagnosticCodeGenerator/genCommonBlock [object antlr/AlternativeBlock] )
  (line 757)
  (const-string v6 "")
  (invoke-virtual {v3 v6} antlr/RuleBlock/findExceptionSpec [object java/lang/String] )
  (move-result-object v5)
  (label l35532)
  (line 760)
  (if-eqz v5 l356a4)
  (line 761)
  (const-string v6 "You specified error-handler(s) for this rule:")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 762)
  (iget v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v6 v6 1)
  (iput v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 763)
  (const/4 v1 0)
  (label l3554e)
  (iget-object v6 v5 antlr/ExceptionSpec.handlers [object antlr/collections/impl/Vector])
  (invoke-virtual {v6} antlr/collections/impl/Vector/size )
  (move-result v6)
  (if-lt v1 v6 l35618)
  (line 772)
  (iget v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v6 v6 255)
  (iput v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 773)
  (const-string v6 "End error-handlers.")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l35574)
  (line 782)
  (iget-boolean v6 v8 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (if-nez v6 l355a4)
  (line 783)
  (const-string v6 "The follow set for this rule is:")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 784)
  (iget v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v6 v6 1)
  (iput v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 785)
  (invoke-virtual {v8 v3} antlr/DiagnosticCodeGenerator/genFollowSetForRuleBlock [object antlr/RuleBlock] )
  (line 786)
  (iget v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v6 v6 255)
  (iput v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (label l355a4)
  (line 789)
  (iget v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v6 v6 255)
  (iput v6 v8 antlr/DiagnosticCodeGenerator.tabs int)
  (line 790)
  (new-instance v6 java/lang/StringBuilder)
  (const-string v7 "*** End ")
  (invoke-direct {v6 v7} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v6 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (const-string v7 " Rule: ")
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v9} antlr/RuleSymbol/getId )
  (move-result-object v7)
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v6} java/lang/StringBuilder/toString )
  (move-result-object v6)
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto/16 l3542c)
  (label l355f4)
  (line 731)
  (iget-boolean v6 v8 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (if-eqz v6 l3560a)
  (line 732)
  (const-string v6 "Return value: lexical rule returns an implicit token type")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto/16 l354cc)
  (label l3560a)
  (line 735)
  (const-string v6 "Return value: none")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto/16 l354cc)
  (label l35618)
  (line 764)
  (if-eqz v1 l35626)
  (line 765)
  (const-string v6 "")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l35626)
  (line 768)
  (iget-object v6 v5 antlr/ExceptionSpec.handlers [object antlr/collections/impl/Vector])
  (invoke-virtual {v6 v1} antlr/collections/impl/Vector/elementAt int )
  (move-result-object v0)
  (check-cast v0 [object antlr/ExceptionHandler])
  (label l35636)
  (line 769)
  (new-instance v6 java/lang/StringBuilder)
  (const-string v7 "Error-handler(")
  (invoke-direct {v6 v7} java/lang/StringBuilder/<init> [object java/lang/String] )
  (add-int/lit8 v7 v1 1)
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append int )
  (move-result-object v6)
  (const-string v7 ") catches [")
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (iget-object v7 v0 antlr/ExceptionHandler.exceptionTypeAndName [object antlr/Token])
  (invoke-virtual {v7} antlr/Token/getText )
  (move-result-object v7)
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (const-string v7 "] and executes:")
  (invoke-virtual {v6 v7} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v6)
  (invoke-virtual {v6} java/lang/StringBuilder/toString )
  (move-result-object v6)
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 770)
  (iget-object v6 v0 antlr/ExceptionHandler.action [object antlr/Token])
  (invoke-virtual {v6} antlr/Token/getText )
  (move-result-object v6)
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/printAction [object java/lang/String] )
  (line 763)
  (add-int/lit8 v1 v1 1)
  (goto/16 l3554e)
  (label l356a4)
  (line 775)
  (iget-boolean v6 v8 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (if-nez v6 l35574)
  (line 776)
  (const-string v6 "Default error-handling will be generated, which catches all")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 777)
  (const-string v6 "parser exceptions and consumes tokens until the follow-set is seen.")
  (invoke-virtual {v8 v6} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (goto/16 l35574)
)

(method (attrs protected ) genSynPred([object antlr/SynPredBlock] )void
  (limit registers 3)
  ; this: v1 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v2 ([object antlr/SynPredBlock])
  (line 798)
  (iget v0 v1 antlr/DiagnosticCodeGenerator.syntacticPredLevel int)
  (add-int/lit8 v0 v0 1)
  (iput v0 v1 antlr/DiagnosticCodeGenerator.syntacticPredLevel int)
  (line 799)
  (invoke-virtual {v1 v2} antlr/DiagnosticCodeGenerator/gen [object antlr/AlternativeBlock] )
  (line 800)
  (iget v0 v1 antlr/DiagnosticCodeGenerator.syntacticPredLevel int)
  (add-int/lit8 v0 v0 255)
  (iput v0 v1 antlr/DiagnosticCodeGenerator.syntacticPredLevel int)
  (line 801)
  (return-void )
)

(method (attrs protected ) genTokenTypes([object antlr/TokenManager] )void
  (annotation systemVisibility [object dalvik/annotation/Throws]
    (value [array [object java/lang/String]] [object java/io/IOException])
  )
  (limit registers 8)
  ; this: v6 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v7 ([object antlr/TokenManager])
  (line 806)
  (iget-object v3 v6 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (new-instance v4 java/lang/StringBuilder)
  (const-string v5 "Generating ")
  (invoke-direct {v4 v5} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-interface {v7} antlr/TokenManager/getName )
  (move-result-object v5)
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (sget-object v5 antlr/DiagnosticCodeGenerator.TokenTypesFileSuffix [object java/lang/String])
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (sget-object v5 antlr/DiagnosticCodeGenerator.TokenTypesFileExt [object java/lang/String])
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/StringBuilder/toString )
  (move-result-object v4)
  (invoke-virtual {v3 v4} antlr/Tool/reportProgress [object java/lang/String] )
  (line 807)
  (iget-object v3 v6 antlr/DiagnosticCodeGenerator.antlrTool [object antlr/Tool])
  (new-instance v4 java/lang/StringBuilder)
  (invoke-interface {v7} antlr/TokenManager/getName )
  (move-result-object v5)
  (invoke-static {v5} java/lang/String/valueOf [object java/lang/Object] )
  (move-result-object v5)
  (invoke-direct {v4 v5} java/lang/StringBuilder/<init> [object java/lang/String] )
  (sget-object v5 antlr/DiagnosticCodeGenerator.TokenTypesFileSuffix [object java/lang/String])
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (sget-object v5 antlr/DiagnosticCodeGenerator.TokenTypesFileExt [object java/lang/String])
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/StringBuilder/toString )
  (move-result-object v4)
  (invoke-virtual {v3 v4} antlr/Tool/openOutputFile [object java/lang/String] )
  (move-result-object v3)
  (iput-object v3 v6 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (line 809)
  (const/4 v3 0)
  (iput v3 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 812)
  (invoke-virtual {v6} antlr/DiagnosticCodeGenerator/genHeader )
  (line 816)
  (const-string v3 "")
  (invoke-virtual {v6 v3} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 817)
  (const-string v3 "*** Tokens used by the parser")
  (invoke-virtual {v6 v3} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 818)
  (const-string v3 "This is a list of the token numeric values and the corresponding")
  (invoke-virtual {v6 v3} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 819)
  (const-string v3 "token identifiers.  Some tokens are literals, and because of that")
  (invoke-virtual {v6 v3} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 820)
  (const-string v3 "they have no identifiers.  Literals are double-quoted.")
  (invoke-virtual {v6 v3} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 821)
  (iget v3 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v3 v3 1)
  (iput v3 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 824)
  (invoke-interface {v7} antlr/TokenManager/getVocabulary )
  (move-result-object v2)
  (line 825)
  (const/4 v0 4)
  (label l357ea)
  (invoke-virtual {v2} antlr/collections/impl/Vector/size )
  (move-result v3)
  (if-lt v0 v3 l3581e)
  (line 833)
  (iget v3 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v3 v3 255)
  (iput v3 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 834)
  (const-string v3 "*** End of tokens used by the parser")
  (invoke-virtual {v6 v3} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (line 837)
  (iget-object v3 v6 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (invoke-virtual {v3} java/io/PrintWriter/close )
  (line 838)
  (const/4 v3 0)
  (iput-object v3 v6 antlr/DiagnosticCodeGenerator.currentOutput [object java/io/PrintWriter])
  (line 839)
  (return-void )
  (label l3581e)
  (line 826)
  (invoke-virtual {v2 v0} antlr/collections/impl/Vector/elementAt int )
  (move-result-object v1)
  (check-cast v1 [object java/lang/String])
  (line 827)
  (if-eqz v1 l35862)
  (line 828)
  (new-instance v3 java/lang/StringBuilder)
  (invoke-static {v1} java/lang/String/valueOf [object java/lang/Object] )
  (move-result-object v4)
  (invoke-direct {v3 v4} java/lang/StringBuilder/<init> [object java/lang/String] )
  (const-string v4 " = ")
  (invoke-virtual {v3 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v3)
  (invoke-virtual {v3 v0} java/lang/StringBuilder/append int )
  (move-result-object v3)
  (invoke-virtual {v3} java/lang/StringBuilder/toString )
  (move-result-object v3)
  (invoke-virtual {v6 v3} antlr/DiagnosticCodeGenerator/println [object java/lang/String] )
  (label l35862)
  (line 825)
  (add-int/lit8 v0 v0 1)
  (goto l357ea)
)

(method (attrs public ) getASTCreateString([object antlr/GrammarAtom] [object java/lang/String] )[object java/lang/String]
  (limit registers 5)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/GrammarAtom])
  ; parameter[1] : v4 ([object java/lang/String])
  (line 852)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 "[")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v0 v4} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (const-string v1 "]")
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) getASTCreateString([object antlr/collections/impl/Vector] )[object java/lang/String]
  (limit registers 4)
  ; this: v2 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v3 ([object antlr/collections/impl/Vector])
  (line 845)
  (new-instance v0 java/lang/StringBuilder)
  (const-string v1 "***Create an AST from a vector here***")
  (invoke-direct {v0 v1} java/lang/StringBuilder/<init> [object java/lang/String] )
  (const-string v1 "line.separator")
  (invoke-static {v1} java/lang/System/getProperty [object java/lang/String] )
  (move-result-object v1)
  (invoke-virtual {v0 v1} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v0)
  (invoke-virtual {v0} java/lang/StringBuilder/toString )
  (move-result-object v0)
  (return-object v0)
)

(method (attrs public ) mapTreeId([object java/lang/String] [object antlr/ActionTransInfo] )[object java/lang/String]
  (limit registers 3)
  ; this: v0 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v1 ([object java/lang/String])
  ; parameter[1] : v2 ([object antlr/ActionTransInfo])
  (line 870)
  (return-object v1)
)

(method (attrs public ) printSet(int int [object antlr/Lookahead] )void
  (limit registers 10)
  ; this: v6 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v7 (int)
  ; parameter[1] : v8 (int)
  ; parameter[2] : v9 ([object antlr/Lookahead])
  (line 879)
  (const/4 v3 5)
  (line 881)
  (iget-object v4 v9 antlr/Lookahead.fset [object antlr/collections/impl/BitSet])
  (invoke-virtual {v4} antlr/collections/impl/BitSet/toArray )
  (move-result-object v1)
  (line 883)
  (const/4 v4 1)
  (if-eq v7 v4 l359aa)
  (line 884)
  (new-instance v4 java/lang/StringBuilder)
  (const-string v5 "k==")
  (invoke-direct {v4 v5} java/lang/StringBuilder/<init> [object java/lang/String] )
  (invoke-virtual {v4 v8} java/lang/StringBuilder/append int )
  (move-result-object v4)
  (const-string v5 ": {")
  (invoke-virtual {v4 v5} java/lang/StringBuilder/append [object java/lang/String] )
  (move-result-object v4)
  (invoke-virtual {v4} java/lang/StringBuilder/toString )
  (move-result-object v4)
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (label l35948)
  (line 889)
  (array-length v4 v1)
  (if-le v4 v3 l3596e)
  (line 890)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 891)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 1)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 892)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (label l3596e)
  (line 895)
  (const/4 v0 0)
  (label l35970)
  (line 896)
  (const/4 v2 0)
  (label l35972)
  (array-length v4 v1)
  (if-lt v2 v4 l359b6)
  (line 914)
  (array-length v4 v1)
  (if-le v4 v3 l3599e)
  (line 915)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 916)
  (iget v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (add-int/lit8 v4 v4 255)
  (iput v4 v6 antlr/DiagnosticCodeGenerator.tabs int)
  (line 917)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (label l3599e)
  (line 919)
  (const-string v4 " }")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 920)
  (return-void )
  (label l359aa)
  (line 887)
  (const-string v4 "{ ")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (goto l35948)
  (label l359b6)
  (line 897)
  (add-int/lit8 v0 v0 1)
  (line 898)
  (if-le v0 v3 l359d4)
  (line 899)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_println [object java/lang/String] )
  (line 900)
  (const-string v4 "")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/print [object java/lang/String] )
  (line 901)
  (const/4 v0 0)
  (label l359d4)
  (line 903)
  (iget-boolean v4 v6 antlr/DiagnosticCodeGenerator.doingLexRules boolean)
  (if-eqz v4 l35a0c)
  (line 904)
  (iget-object v4 v6 antlr/DiagnosticCodeGenerator.charFormatter [object antlr/CharFormatter])
  (aget v5 v1 v2)
  (invoke-interface {v4 v5} antlr/CharFormatter/literalChar int )
  (move-result-object v4)
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l359f2)
  (line 909)
  (array-length v4 v1)
  (add-int/lit8 v4 v4 255)
  (if-eq v2 v4 l35a06)
  (line 910)
  (const-string v4 ", ")
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (label l35a06)
  (line 896)
  (add-int/lit8 v2 v2 1)
  (goto l35972)
  (label l35a0c)
  (line 907)
  (iget-object v4 v6 antlr/DiagnosticCodeGenerator.grammar [object antlr/Grammar])
  (iget-object v4 v4 antlr/Grammar.tokenManager [object antlr/TokenManager])
  (invoke-interface {v4} antlr/TokenManager/getVocabulary )
  (move-result-object v4)
  (aget v5 v1 v2)
  (invoke-virtual {v4 v5} antlr/collections/impl/Vector/elementAt int )
  (move-result-object v4)
  (check-cast v4 [object java/lang/String])
  (invoke-virtual {v6 v4} antlr/DiagnosticCodeGenerator/_print [object java/lang/String] )
  (goto l359f2)
)

(method (attrs protected ) processActionForSpecialSymbols([object java/lang/String] int [object antlr/RuleBlock] [object antlr/ActionTransInfo] )[object java/lang/String]
  (limit registers 5)
  ; this: v0 ([object antlr/DiagnosticCodeGenerator])
  ; parameter[0] : v1 ([object java/lang/String])
  ; parameter[1] : v2 (int)
  ; parameter[2] : v3 ([object antlr/RuleBlock])
  ; parameter[3] : v4 ([object antlr/ActionTransInfo])
  (line 860)
  (return-object v1)
)

)
